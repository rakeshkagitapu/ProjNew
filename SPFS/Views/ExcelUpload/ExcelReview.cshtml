

@model SPFS.Models.ExcelRatingsViewModel

@{

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ExcelReview</title>
</head>
<body>
    <h2>Uploaded Records</h2>
    <hr />

    <div class="container col-md-12 tableheight">
        <table class="table table-condensed table-hover">
            <tr class="active">
                <th>
                    @Html.DisplayNameFor(model => model.RatingRecords.First().CID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RatingRecords.First().DUNS)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RatingRecords.First().ERP_Supplier_ID)
                </th>
                @*<th>
                    @Html.DisplayNameFor(model => model.RatingRecords.First().SupplierName)
                </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.RatingRecords.First().Inbound_parts)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RatingRecords.First().OTR)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RatingRecords.First().OTD)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RatingRecords.First().PFR)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.RatingRecords.First().ErrorInformation)
                </th>

            </tr>
            @if (Model.RatingRecords.Count() == 0)
            {
                <tr>
                    <td colspan="6">
                        <div class="alert alert-warning" role="alert">
                            <strong>Warning!</strong> @SPFS.Helpers.Utilities.NO_RESULT
                        </div>

                    </td>
                </tr>
            }
            else
            {
                foreach (var item in Model.RatingRecords)
                {
                    if ((item.ErrorInformation != null ? item.ErrorInformation.Count : 0) > 1)
                    {
                     @Html.HiddenFor(modelItem => item.CID)
                    <tr>
                        <td>                          
                            @Html.DisplayFor(modelItem => item.CID)

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DUNS)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ERP_Supplier_ID)
                        </td>
                        @*<td>
                            @Html.DropDownListFor(modelItem => item.CID, ViewBag.Suppliers as IEnumerable<SelectListItem>, "",
                new { @class = "selectpicker", data_live_search = "true", data_size = "10", data_width = "30%" })
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.Inbound_parts)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OTR)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OTD)


                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PFR)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ErrorInformation.Count)
                        </td>
                    </tr>
                    }
                }
            }
        </table>
        
    </div>
    <div class="row col-md-12">
        <div class="pull-right">
            <a href="@Url.Action("Save", "ExcelUpload")" class="btn btn-primary btn">
                <span class="glyphicon glyphicon-floppy-save"></span> Save
            </a>
            <a href="@Url.Action("Merge", "ExcelUpload")" class="btn btn-primary btn">
                <span class="glyphicon glyphicon-random"></span> Merge
            </a>
            @{ 
               
            }
            <a href="@Url.Action("ExportData", "ExcelUpload", new { fileName = "UploadedFile", Records =Model.RatingRecords } )" class="btn btn-primary btn">
                <span class="glyphicon glyphicon-export"></span> Export
            </a>
        </div>
    </div>
</body>
</html>
